&i2c0 {
    compatible = "nordic,nrf-twim"; // Ensure this matches the I2C peripheral on your Nordic SoC
    status = "okay";
    clock-frequency = <I2C_BITRATE_STANDARD>; // Set the I2C bus speed to standard rate (100 kHz)

    sht4x@44 {  // Node for the SHT4x sensor with I2C address 0x44
        compatible = "sensirion,sht4x"; // SHT4x sensor compatible string
        reg = <0x44>;                   // I2C address of the SHT4x sensor
        label = "SHT4X";                // Optional label for the sensor
        status = "okay";                // Enable the sensor
        repeatability = <2>;            // Sensor repeatability setting (if applicable)
    };
};

/* for node */

// &pinctrl {
// 	uart0_default: uart0_default {
// 		group1 {
// 			psels = <NRF_PSEL(UART_TX, 0, 24)>, //6   for nrf52dk5832 / 5840
// 				<NRF_PSEL(UART_RX, 0, 23)>,   //8	  for nrf52dk5832
// 				<NRF_PSEL(UART_RTS, 0, 5)>,
// 				<NRF_PSEL(UART_CTS, 0, 7)>;
// 		};
// 	};

// 	uart0_sleep: uart0_sleep {
// 		group1 {
// 			psels = <NRF_PSEL(UART_TX, 0, 24)>,    //6
// 				<NRF_PSEL(UART_RX, 0, 23)>,        //8
// 				<NRF_PSEL(UART_RTS, 0, 5)>,
// 				<NRF_PSEL(UART_CTS, 0, 7)>;
// 			low-power-enable;
// 		};
// 	};
// 	i2c0_default: i2c0_default {
// 		group1 {
// 			psels = <NRF_PSEL(TWIM_SDA, 0, 26)>,  
// 				<NRF_PSEL(TWIM_SCL, 0, 25)>;      
// 		};
// 	};

// 	i2c0_sleep: i2c0_sleep {
// 		group1 {
// 			psels = <NRF_PSEL(TWIM_SDA, 0, 26)>,   
// 				<NRF_PSEL(TWIM_SCL, 0, 25)>;        
// 			low-power-enable;
// 		};
// 	};

	

// };



